# Invert a Binary Tree
# O(n)
# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right

class Solution:
    def invertTree(self, root: Optional[TreeNode]) -> Optional[TreeNode]:
        # check root is not null
        if not root:
            return root

        # swapping left and right children
        temp = root.left
        root.left = root.right
        root.right = temp

        root.left = self.invertTree(root.left)
        root.right = self.invertTree(root.right)
        return root


